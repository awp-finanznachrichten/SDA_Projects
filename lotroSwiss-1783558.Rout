
R version 3.6.0 (2019-04-26) -- "Planting of a Tree"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(rvest)
> library(tidyverse)
-- Attaching packages --------------------------------------- tidyverse 1.3.1 --
v ggplot2 3.3.5     v purrr   0.3.4
v tibble  3.1.1     v dplyr   1.0.6
v tidyr   1.1.3     v stringr 1.4.0
v readr   1.4.0     v forcats 0.5.1
-- Conflicts ------------------------------------------ tidyverse_conflicts() --
x dplyr::filter()         masks stats::filter()
x readr::guess_encoding() masks rvest::guess_encoding()
x dplyr::lag()            masks stats::lag()
Warning messages:
1: package 'tidyverse' was built under R version 3.6.3 
2: package 'tibble' was built under R version 3.6.3 
3: package 'tidyr' was built under R version 3.6.3 
4: package 'readr' was built under R version 3.6.3 
5: package 'purrr' was built under R version 3.6.3 
6: package 'dplyr' was built under R version 3.6.3 
7: package 'forcats' was built under R version 3.6.3 
> library(stringr)
> library(RCurl)
Loading required package: bitops

Attaching package: 'RCurl'

The following object is masked from 'package:tidyr':

    complete

> library(readxl)
> library("rio")
> library(gsubfn)
Loading required package: proto
Warning messages:
1: package 'gsubfn' was built under R version 3.6.3 
2: package 'proto' was built under R version 3.6.3 
> library(lubridate)

Attaching package: 'lubridate'

The following objects are masked from 'package:base':

    date, intersect, setdiff, union

Warning message:
package 'lubridate' was built under R version 3.6.3 
> library(naptime)
Warning message:
package 'naptime' was built under R version 3.6.3 
> library(XML)
> library(xml2)
Warning message:
package 'xml2' was built under R version 3.6.3 
> library(git2r)

Attaching package: 'git2r'

The following objects are masked from 'package:RCurl':

    clone, push, reset

The following object is masked from 'package:dplyr':

    pull

The following objects are masked from 'package:purrr':

    is_empty, when

Warning message:
package 'git2r' was built under R version 3.6.3 
> 
> setwd("C:/Automatisierungen/SDA_Projects")
> 
> gitcommit <- function(msg = "commit from Rstudio", dir = getwd()){
+   cmd = sprintf("git commit -m\"%s\"",msg)
+   system(cmd)
+ }
> 
> gitstatus <- function(dir = getwd()){
+   cmd_list <- list(
+     cmd1 = tolower(substr(dir,1,2)),
+     cmd2 = paste("cd",dir),
+     cmd3 = "git status"
+   )
+   cmd <- paste(unlist(cmd_list),collapse = " & ")
+   shell(cmd)
+ }
> 
> gitadd <- function(dir = getwd()){
+   cmd_list <- list(
+     cmd1 = tolower(substr(dir,1,2)),
+     cmd2 = paste("cd",dir),
+     cmd3 = "git add --all"
+   )
+   cmd <- paste(unlist(cmd_list),collapse = " & ")
+   shell(cmd)
+ }
> 
> gitpush <- function(dir = getwd()){
+   cmd_list <- list(
+     cmd1 = tolower(substr(dir,1,2)),
+     cmd2 = paste("cd",dir),
+     cmd3 = "git push"
+   )
+   cmd <- paste(unlist(cmd_list),collapse = " & ")
+   shell(cmd)
+ }
> 
> 
> ###### Tool box
> 
> 
> #putting the ' where it belongs
> bigNum<- function(bNum) {
+   bNum<-ifelse(bNum >= 10000, format(bNum, big.mark="'", scientific=FALSE),bNum)
+ }
> 
> #Writing small numbers, second argument lan= 'it', 'de', or 'fr'
> smallNum<- function(sNum,lan){
+   chiffre<-c('un','deux','trois','quatre','cinq','six','sept','huit','neuf','dix')
+   chiffreD<-c('ein','zwei', 'drei', 'vier', 'fÃ¼nf', 'sechs', 'sieben', 'acht', 'neun', 'zehn')
+   chiffreI<-c('uno', 'due', 'tre', 'quattro', 'cinque', 'sei', 'sette', 'otto', 'nove', 'dieci')
+   if(lan=='de'){
+     sNum<-ifelse(sNum <= 10, chiffreD[sNum],sNum)
+   } else if (lan=='it'){
+     sNum<-ifelse(sNum <= 10, chiffreI[sNum],sNum)
+   } else if (lan=='fr') {
+     sNum<-ifelse(sNum <= 10, chiffre[sNum],sNum)
+   } else {
+     sNum
+   }
+   
+ }
> 
> 
> #days of the week in 3 different languages second argument lan= 'it', 'de', or 'fr'
> dayM<- function(date, lan) {
+   num<-wday(date)
+   dayE<-c('Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday')
+   dayD<-c('Sonntag', 'Montag', 'Dienstag', 'Mittwoch', 'Donnerstag', 'Freitag', 'Samstag')
+   dayI<-c('domenica', 'lunedÃ¬', 'martedÃ¬', 'mercoledÃ¬', 'giovedÃ¬','venerdÃ¬', 'sabato')
+   dayF<-c('dimanche', 'lundi','mardi','mercredi','jeudi','vendredi','samedi')
+   wday(date)
+   if(lan=='de'){
+     day<-dayD[num]
+   } else if (lan=='it'){
+     day<-dayI[num]
+   } else if (lan=='fr') {
+     day<-dayF[num]
+   } else {
+     day<-dayF[num]
+   }
+   return(day)
+ }
> 
> 
> 
> #triple options selector, enter the number and 3 possible texts (one,many,none)
> selectText<- function(num,varOne,varMult,varNone){
+   if (num==1){
+     para<-varOne
+   } else if (num>1){
+     para<-varMult
+   } else if (num<=0) {
+     para<-varNone
+   }
+   return(para)
+ }
> 
> 
> 
> #Create file name adding the date
> createFileName<- function(fname) {
+   library(filenamer)
+   f <- as.filename(fname)
+   txt <- tag(f, dateFormat)
+ }
> 
> 
> 
> #create the final file function, needs to be updated in case of longer text and in case of saving
> createFile2<- function(fsource, fname,lead,par1,titleShort,titleLong) {
+   tx  <- readLines(fsource)
+   tx2  <- gsub(pattern = "Leadtxt", replace = lead, x = tx)
+   tx2  <- gsub(pattern = "Paragraphe1", replace = par1, x = tx2)
+   tx2  <- gsub(pattern = "titreCourt", replace = titleShort, x = tx2)
+   tx2  <- gsub(pattern = "titreLong", replace = titleLong, x = tx2)
+   writeLines(tx2, con=fname)
+ }
> 
> createFile<- function(fsource, fname,lead,par1,par2,par3,titleShort,titleLong) {
+   tx  <- readLines(fsource)
+   tx2  <- gsub(pattern = "Leadtxt", replace = lead, x = tx)
+   tx2  <- gsub(pattern = "Paragraphe1", replace = par1, x = tx2)
+   tx2  <- gsub(pattern = "Paragraphe2", replace = par2, x = tx2)
+   tx2  <- gsub(pattern = "Paragraphe3", replace = par3, x = tx2)
+   tx2  <- gsub(pattern = "titreCourt", replace = titleShort, x = tx2)
+   tx2  <- gsub(pattern = "titreLong", replace = titleLong, x = tx2)
+   writeLines(tx2, con=fname)
+ }
> #######
> 
> 
> ### add the loop here
> 
> url <- "https://jeux.loro.ch/games/swissloto/results"
> h <- read_html(url)
> 
> loopy<- h%>% html_nodes(xpath ='/html/body/main/section[2]/section/div[4]/div/div/div[1]/h3')%>%
+   xml_text()%>%tolower()
> loopy
[1] "\nrésultats bientôt disponibles...           "
> 
> today<-dayM(wday(Sys.time()),"fr")
> 
> 
> str_detect(loopy, today, negate = FALSE)
[1] FALSE
> 
> #was there to prevent some problem
> # I don't think it's necessary anymore, but as everything works well, I rather not remove stuff
> jokerGainsNum<-0
> ptGainsNum<-0
> 
> 
> #### Loop 
> # Setting the variables for the loop
> n<-0
> testing<-FALSE
> 
> # This was a tricky loop, as the website is sometimes updated in 3 different times
> # The loop checks for the day, the number of row in the winning result and in the joker result
> while (testing == FALSE) {
+   url <- "https://jeux.loro.ch/games/swissloto/results"
+   h <- read_html(url)
+   #number of lines winner
+   nligne<-h %>%
+     html_nodes("table") %>%
+     .[1] %>%
+     html_table(fill = TRUE)
+   nligne1<-nligne[[1]][2] 
+   testrow<-as.numeric(nrow(nligne1))
+   testrow
+   #number of lines Joker
+   nligneJ<-h %>%
+     html_nodes("table") %>%
+     .[2] %>%
+     html_table(fill = TRUE)
+   nligne2<-nligneJ[[1]][2] 
+   testrow2<-as.numeric(nrow(nligne2))
+   testrow2
+   #finding the day
+   datetest<- h%>%html_nodes(xpath ='//*[@id="result-date"]')%>%xml_text()
+   daytest<-as.character(tolower(datetest[1]))
+   daytest<-str_detect(daytest, today, negate = FALSE)
+   # if the 3 elements are new, we got our testing = True
+   if(daytest==TRUE && testrow>7 && testrow2<8 ) {
+     testing<-TRUE
+   }
+   # The exit option
+   n<-n+1
+   if(n > 180) {testing <- TRUE} #stop running after 1h30min, in case something wrong
+   # Still takes a little nap
+   if(testing==FALSE) {
+     naptime(30)
+   }
+ }
> 
> daytest
[1] TRUE
> testrow
[1] 8
> testrow2
[1] 5
> testing
[1] TRUE
> #####
> 
> 
> #retrieving the result page and the main page with the sum of the next prize
> url <- "https://jeux.loro.ch/games/swissloto/results"
> url2<-"https://jeux.loro.ch/games/swissloto"
> h <- read_html(url)
> h2<-read_html(url2)
> 
> 
> #extract the date
> date<- h%>%html_nodes(xpath ='/html/body/main/section/div/div[1]/section/div/div[2]/article[1]/div[1]')%>%xml_text()
> date<-ifelse(str_detect(date,"Mercredi"), "mercredi","samedi")
> 
> #extract the 6 numbers
> result <- h %>% html_nodes(xpath ="/html/body/main/section/div/div[1]/section/div/div[2]/article[1]/div[2]/div/div[1]/div[1]/ul")%>%html_nodes('li')%>%
+   xml_text()%>%as.numeric()
> 
> #extract the lucky number, replay, and jocker
> luckNum<- h%>% html_nodes(xpath ='/html/body/main/section/div/div[1]/section/div/div[2]/article[1]/div[2]/div/div[1]/div[1]/span[2]')%>%
+   xml_text()%>%as.numeric()
> 
> replay<- h%>% html_nodes(xpath ='/html/body/main/section/div/div[1]/section/div/div[2]/article[1]/div[2]/div/div[1]/div[2]/span')%>%
+   xml_text()%>%as.numeric()
> 
> #the tricky joker, with some editing
> joker<- h%>% html_nodes(xpath ='/html/body/main/section/div/div[1]/section/div/div[2]/article[1]/div[2]/div/div[2]/div[1]/div/span')%>%
+   xml_text()%>%str_replace_all(fixed(" "), "")%>%str_replace_all("[\r\n]" , "")%>%str_trim("both")
> 
> 
> print(joker)
[1] "198320"
> 
> #winner with 6 numbers, and winnings
> gdGagnant<-h%>%html_nodes(xpath='/html/body/main/section/div/div[1]/section/div/div[2]/article[1]/div[2]/div/div[2]/table[1]/tbody/tr[1]/td[2]')%>%
+   xml_text()%>%as.numeric()
> 
> gains<-h%>%html_nodes(xpath='/html/body/main/section/div/div[1]/section/div/div[2]/article[1]/div[2]/div/div[2]/table[1]/tbody/tr[1]/td[3]')%>%
+   xml_text()%>%parse_number(locale=locale(grouping_mark="'", decimal_mark="."))
> gains<-gains/10^6
> gains<-format(gains, digits=4, decimal.mark=",", scientific=FALSE)
> 
> 
> #winners with 5 numbers, and winnings
> ptGagnant<-h%>%html_nodes(xpath='/html/body/main/section/div/div[1]/section/div/div[2]/article[1]/div[2]/div/div[2]/table[1]/tbody/tr[2]/td[2]')%>%
+   xml_text()%>%as.numeric()
> 
> ptGains<-h%>%html_nodes(xpath='/html/body/main/section/div/div[1]/section/div/div[2]/article[1]/div[2]/div/div[2]/table[1]/tbody/tr[2]/td[3]')%>%
+   xml_text()%>%parse_number(locale=locale(grouping_mark="'", decimal_mark="."))
> # We keep a numeric version for the selection system, and a string one for the text
> ptGainsNum<-ptGains/10^6
> ptGains<-format(ptGainsNum, digits=2, decimal.mark=",", scientific=FALSE)
> 
> 
> # joker winner with winnings
> jokerGagnant<- h%>%html_nodes(xpath='/html/body/main/section[2]/div/div[1]/section/div/div[2]/article[1]/div[2]/div/div[2]/div[2]/table/tbody/tr[1]/td[2]')%>%
+   xml_text()%>%as.numeric()
> 
> 
> jokerGains<-h%>%html_nodes(xpath='/html/body/main/section[2]/div/div[1]/section/div/div[2]/article[1]/div[2]/div/div[2]/div[2]/table/tbody/tr[1]/td[3]')%>%
+   xml_text()%>%parse_number(locale=locale(grouping_mark="'", decimal_mark="."))
> # We keep a numeric version for the selection system, and a string one for the text
> jokerGainsNum<-jokerGains/10^6
> jokerGains<-format(jokerGainsNum, digits=2, decimal.mark=",", scientific=FALSE)
> 
> # Had a bunch of problem with the joker. It's updated afer the other element
> # Now it works fine, but this is just for the log
> if (is.null(jokerGainsNum)==TRUE){print("Joker is null")}
> 
> 
> #numbers in words for the text, I didn't updated this one with smallNum, as it's only in french
> chiffre<-c('un','deux','trois','quatre','cinq','six','sept','huit','neuf')
> 
> #possible title
> surtitre<-"Sim Loterie"
> titWinner<- sprintf("Un joueur dÃ©croche le jackpot au Swiss Loto")
> titdblWinner<- sprintf("Le Swiss Loto fait %s nouveaux millionnaires", chiffre[gdGagnant])
> titdblWinnerSMBig<-sprintf("Le Swiss Loto fait deux nouveaux millionnaires")
> titptWinner<-sprintf("Un nouveau millionnaire au tirage du Swiss Loto")
> titnoWinner<-sprintf("Pas de nouveau millionnaire au tirage du Swiss Loto")
> titdblptWinner<-sprintf("Deux nouveaux millionnaires au tirage du Swiss Loto")
> 
> #short title
> titWinnerCo<- sprintf("Un joueur dÃ©croche le jackpot au Swiss Loto")
> titdblWinnerCo<- sprintf("Le Swiss Loto fait %s millionnaires", chiffre[gdGagnant])
> titdblWinnerSMBigCo<- sprintf("Le Swiss Loto fait deux millionnaires")
> titptWinnerCo<-sprintf("Un nouveau millionnaire au Swiss Loto")
> titnoWinnerCo<-sprintf("Pas de millionnaire au tirage du Swiss Loto")
> titdblptWinnerCo<-sprintf("Deux chanceux au tirage du Swiss Loto")
> 
> 
> 
> #
> #Possible lead
> winner<-sprintf("Le Swiss Loto a fait un heureux gagnant %s qui a empochÃ© %s millions de francs.", date,gains)
> dblWinner<-sprintf("Le Swiss Loto a fait %s heureux gagnants %s qui ont chacun empochÃ© %s millions de francs.",chiffre[gdGagnant], date,gains)
> dblWinnerSMBig<-sprintf("Le Swiss Loto a fait %s heureux gagnants %s. L'un a empochÃ© %s millions de francs et l'autre %s million.",chiffre[gdGagnant+ptGagnant], date,gains,ptGains)
> ptWinner<-sprintf("Le Swiss Loto a fait un nouveau millionnaire %s. Un joueur a cochÃ© les six bons numÃ©ros et empoche %s million de francs.", date,ptGains)
> noWinner<-sprintf("Personne n'a trouvÃ© la combinaison gagnante du Swiss Loto %s soir.", date)
> bonNum<-sprintf("Pour empocher le gros lot, il fallait cocher le %s, %s, %s, %s, %s et %s. Le numÃ©ro chance Ã©tait le %s, le rePLAY le %s et le Joker le %s.", result[1],result[2],result[3],result[4],result[5], result[6], luckNum, replay, joker)
> 
> # 6 num et joker
> dblptitWinner<- sprintf("Le Swiss Loto a fait deux millionnaires %s. L'un empoche %s avec les six bons numÃ©ros et l'autre %s million grÃ¢ce au Joker.", date, ptGains, jokerGains)
> jokerWinner<- sprintf("La Suisse compte un nouveau millionnaire. Un joueur a empochÃ© %s million grÃ¢ce au Joker au tirage du Swiss Loto  %s.", jokerGains, date)
> 
> 
> #get the next cashprize
> nextPrice <- h2 %>% html_nodes(xpath="/html/body/main/section/section/div[2]/div/div[1]/h2/span[1]")
> nextPrice<-as.numeric(xml_text(nextPrice))
> nextPrice<-format(nextPrice, decimal.mark=",", scientific=FALSE)
> nextPrice
[1] "3,6"
> 
> #get the next loto day
> nextDate<-ifelse(date=='samedi', 'mercredi prochain','samedi')
> cash<-sprintf("Lors du prochain tirage %s, %s millions de francs seront en jeu, indique la Loterie Romande.", nextDate,nextPrice)
> 
> 
> 
> # Selecting the strings, careful to use only numeric values
> # I tried to get all the scenario, but it's possible to add more
> if (gdGagnant>1){
+   win<-dblwinner
+   tit<-titdblWinner
+   titco<-titdblWinnerCo
+   
+ } else if (gdGagnant==1 && ptGainsNum>=1){
+   win<-dblWinnerSMBig
+   tit<-titdblWinnerSMBig
+   titco<-titdblWinnerSMBigCo
+   
+ } else if (gdGagnant==1){
+   win<-winner
+   tit<-titWinner
+   titco<-titWinnerCo
+   
+ } else if (jokerGainsNum>=1 && ptGainsNum>=1){
+   win<-dblptitWinner
+   tit<-titdblptWinner
+   titco<-titdblptWinnerCo
+ 
+ } else if (jokerGainsNum>=1){
+   win<-jokerWinner
+   tit<-titptWinner
+   titco<-titptWinnerCo
+ 
+ } else if (ptGainsNum>=1){
+   win<-ptWinner
+   tit<-titptWinner
+   titco<-titptWinnerCo
+ 
+ } else if (gdGagnant==0 && ptGainsNum<1){
+   win<-noWinner
+   tit<-titnoWinner
+   titco<-titnoWinnerCo
+   
+ } 
> 
> 
> #printing for test
> cat(tit)
Pas de nouveau millionnaire au tirage du Swiss Loto> cat(win, bonNum,cash)
Personne n'a trouvÃ© la combinaison gagnante du Swiss Loto mercredi soir. Pour empocher le gros lot, il fallait cocher le 1, 6, 13, 24, 26 et 39. Le numÃ©ro chance Ã©tait le 5, le rePLAY le 2 et le Joker le 198320. Lors du prochain tirage samedi, 3,6 millions de francs seront en jeu, indique la Loterie Romande.> 
> #Create the lead
> leadSwiss<-paste(win,bonNum)
> leadSwiss
[1] "Personne n'a trouvÃ© la combinaison gagnante du Swiss Loto mercredi soir. Pour empocher le gros lot, il fallait cocher le 1, 6, 13, 24, 26 et 39. Le numÃ©ro chance Ã©tait le 5, le rePLAY le 2 et le Joker le 198320."
> 
> par2<-sprintf("")
> par3<-sprintf("NOTE: Cette dÃ©pÃªche a Ã©tÃ© produite avec le soutien de la Loterie Romande. Elle a Ã©tÃ© gÃ©nÃ©rÃ©e automatiquement et relue avant diffusion.")
> 
> 
> 
> 
> dateFormat<-format(Sys.time(), "%d%b")
> dateFormat
[1] "04Aug"
> 
> #Create the file name and then the file
> txtSwiss<-createFileName("lotoSwiss.mrs")

Attaching package: 'filenamer'

The following object is masked from 'package:git2r':

    tag

Warning message:
package 'filenamer' was built under R version 3.6.3 
> 
> #Github
> createFile("lotoN.mrs",paste0("Output/Lotto/",txtSwiss),leadSwiss,cash,par2, par3, titco, tit)
Warning message:
In readLines(fsource) : incomplete final line found on 'lotoN.mrs'
> 
> #FTP
> createFile("lotoN.mrs",paste0("C:/SDA_Output/Lotto/",txtSwiss),leadSwiss,cash,par2, par3, titco, tit)
Warning message:
In readLines(fsource) : incomplete final line found on 'lotoN.mrs'
> 
> #Make Commit
> token <- read.csv("C:/Automatisierungen/Github_Token/token.txt",header=FALSE)[1,1]
Warning message:
In read.table(file = file, header = header, sep = sep, quote = quote,  :
  incomplete final line found by readTableHeader on 'C:/Automatisierungen/Github_Token/token.txt'
> 
> #git2r::config(user.name = "awp-finanznachrichten",user.email = "sw@awp.ch")
> invisible(git2r::cred_token(token))
> gitadd()
warning: LF will be replaced by CRLF in .Rproj.user/37D25618/sources/prop/A26A3BC7.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in .Rproj.user/37D25618/sources/prop/AE8060E8.
The file will have its original line endings in your working directory
> gitcommit()
[master d6104d3] commit from Rstudio
 7 files changed, 66 insertions(+), 4 deletions(-)
 create mode 100644 Output/Lotto/lotoSwiss_04Aug.mrs
 create mode 100644 lotroSwiss-1783558.Rout
[1] 0
> gitpush()
To https://github.com/awp-finanznachrichten/SDA_Projects
   74800e3..d6104d3  master -> master
> 
> #Send everything to dropbox
> #library(httpuv)
> #library(rdrop2)
> 
> #token <- readRDS("token.rds")
> 
> #drop_upload(txtSwiss, path='Loto', dtoken = token)
> 
> proc.time()
   user  system elapsed 
   4.35    0.57 1035.04 
